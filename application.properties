##comun para todos los microservicios,guardamos los datos comunes
##cliente-id  ,el nombre y password que he puesto en el microservicio-autenticacion para generar el token, en la clase AuthorizationServerConfig
##en el metodo public void configure(ClientDetailsServiceConfigurer clients)
config.security.autenticacion.client.id=frontendadd
config.security.autenticacion.secret=12345
##tambien en el microservicio-autenticacion, en en la clase AuthorizationServerConfig,metodo JwtAccessTokenConverter accessTokenConverter
##la clave que le puesto como firma
config.security.autenticacion.jwt.key=en_unLugarDelaManchaDecuyoNombreNoquieroAcordarme_ViviaUnHidalgoDeNombre

##conexion con rabbit
spring.zipkin.base-url=http://localhost:9411/
spring.sleuth.sampler.probability=1.0
##spring.zipkin.sender.type=rabbit
##cuando creo docker le paso la direccion de la instancia/contenedor donde va a estar,
#lo pongo en el application-properties que tengo en git
##spring.rabbitmq.host=servicios-rabbitmq311
management.endpoints.web.exposure.include=*
 
management.endpoint.health.show-details=always
management.health.defaults.enabled=true
logging.level.web=trace
logging.level.org.hibernate.SQL=debug

##REsilience4j
##https://github.com/resilience4j/resilience4j/issues/1226
resilience4j.circuitbreaker.configs.defecto.sliding-window-size=6
resilience4j.circuitbreaker.configs.defecto.failure-rate-threshold=50
resilience4j.circuitbreaker.configs.defecto.wait-duration-in-open-state=20s
resilience4j.circuitbreaker.configs.defecto.permitted-number-of-calls-in-half-open-state=4
resilience4j.circuitbreaker.configs.defecto.slow-call-rate-threshold=50
resilience4j.circuitbreaker.configs.defecto.slow-call-duration-threshold=2s
resilience4j.timelimiter.configs.defecto.timeout-duration=2s
resilience4j.timelimiter.instances.configcontroller.base-config=defecto
resilience4j.circuitbreaker.instances.configcontroller.base-config=defecto